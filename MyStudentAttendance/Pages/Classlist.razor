@page "/classlist"
@inject ILecturesRepo _lecture;
@using System.Globalization;
<PageTitle>Available Subjects</PageTitle>

@using MyStudentAttendance.Data
@inject WeatherForecastService ForecastService

<h1>Available Subject</h1>

<p>Submitted Lecture Info</p>

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Class Name</th>
                <th>Course Code</th>
                <th>Teacher</th>
                <th>Day</th>
                <th>Start Time</th>
                <th>Stop Time</th>
                
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in forecasts)
            {
                <tr>
                    <td>@forecast.ClasssName</td>
                    <td>COS @forecast.CourseCode</td>
                    <td>@forecast.TeacherName</td>
                    <td>@forecast.DayOfWeek</td>
                    <td>@forecast.StartTime.ToString("hh:mm tt", CultureInfo.InvariantCulture)</td>
                    <td>@forecast.StopTime.ToString("hh:mm tt", CultureInfo.InvariantCulture)</td>
    
                 </tr>
            }
        </tbody>
    </table>
}

@code {
    private IEnumerable<SchoolClass> forecasts= new List<SchoolClass>();
    @using MyStudentApi.Repository.IRepo;
    @using MyStudentApi.Models;
    @using MyStudentApi.Data;

    protected override async Task OnInitializedAsync()
    {
        forecasts = await _lecture.Getlectures();
    }
}
